# -*- coding: utf-8 -*-
"""
@time 2020-1-29
@author: yzm
"""


import requests
import hashlib
import json
import urllib.parse
import MySQLdb
'''
headers = {
    "authorization": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMDAxMDIyLCJ1c2VyX3N0YXR1cyI6ImVuYWJsZWQiLCJhY2NvdW50cyI6WzEwMDEwMjhdLCJpc3MiOiJqR0NPRm54QWlsQjNkcW9GejhwSXNCYWd2TnVzaE9FSiIsImlhdCI6MTYyMDg5OTg4NCwiZXhwIjoxNjIwOTg2Mjg0LCJhY2NvdW50X2lkIjoxMDAxMDI4LCJhY2NvdW50X3N0YXR1cyI6ImVuYWJsZWQiLCJyb2xlcyI6WyJyb290IiwiXHU3YmExXHU3NDA2XHU1NDU4Il0sInBlcm1zIjpbIjIwMSIsIjIwMiIsbnVsbF19.gADDfSZ_naOBXkmZEMT-EDYgEz70wN7fGg-xQxuao38"
    }
headers_cms = {
    "authorization": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyMDAxODUzLCJ1c2VyX3N0YXR1cyI6ImVuYWJsZWQiLCJhY2NvdW50cyI6WzEwMDE5ODVdLCJpc3MiOiJxQ2dmc0Y1VGdQb0tENHF0ejZTVlZud2R0Q3p1TlBOeiIsImlhdCI6MTYyMDkwNjc0MCwiZXhwIjoxNjIwOTkzMTQwLCJhY2NvdW50X2lkIjoxMDAxOTg1LCJhY2NvdW50X3N0YXR1cyI6ImVuYWJsZWQiLCJyb2xlcyI6WyJcdTdiYTFcdTc0MDZcdTU0NTgiLCJyb290Il0sInBlcm1zIjpbIjgiLCIxMSIsIjQiLCI2IiwiMTIiLCI3IiwiMiIsIjEiLCIxMyIsIjUiLCIxMCIsIjMiXX0.ElwpLWq4smSte-uh85Ma5KR-anNdkXCz2SNCH1TJ4OY"
    }
'''

def read_url_get(code_url):
    response_2 = requests.get(url=code_url, headers=headers).json()
    response_str = str(response_2)
    return response_str


def read_url_get_cms(code_url):
    response_2 = requests.get(url=code_url, headers=headers_cms).json()
    response_str = str(response_2)
    return response_str


MC_HOST = 'https://api.ecpro.com'
CMS_HOST = 'https://cms-api.ecpro.com'

# PERIOD_MAPPING = {}
# PERIOD_MAPPING = {"15430": 19604}

def package_status_bak(page=1, per_page=40):
    """查找出onemore数据迁移中，图片包状态，从已关联变为未上传,不过滤空图片包
    """
    for key, value in PERIOD_MAPPING.items():
        shop_url = MC_HOST + '/merchant/products?page=%s&per_page=%s&code=&period_id=%s' % (page, per_page, key)
        response = read_url_get(shop_url)
        response = eval(response)
        for product_overview in response["data"]["products"]:
            # 图片包已关联
            if product_overview['media_status'] == 'associated':
                merchant_number = urllib.parse.quote(product_overview['code'])
                shop_cms_url = CMS_HOST + '/merchant/v2/products/overview?page=1&per_page=40&codes=%s&period_id=%s' % (
                    merchant_number, value)
                response = read_url_get_cms(shop_cms_url)
                response = eval(response)
                for product in response["data"]["product_overview"]:
                    # 图片包未上传
                    if product['package_status'] == 'not_upload':
                        print(product_overview['id'], product_overview['code'])
    if response["data"]["total"] > 40:
        package_status_bak(page + 1, per_page)

def package_status(page=1, per_page=40):
    """查找出onemore数据迁移中，图片包状态，从已关联变为未上传
    """
    for key, value in PERIOD_MAPPING.items():
        shop_url = MC_HOST + '/merchant/products?page=%s&per_page=%s&code=&period_id=%s' % (page, per_page, key)
        response = read_url_get(shop_url)
        response = eval(response)
        for product_overview in response["data"]["products"]:
            # 图片包已关联
            if product_overview['media_status'] == 'associated':

                # 去除空图片包,素材中心筛选
                head_picture_url = MC_HOST + '/storage/files?head_picture=1&page=1&per_page=10&period_id=%s&name=%s' % (
                product_overview['package_info']['period_id'], product_overview['code'])
                response_picture = read_url_get(head_picture_url)
                response_picture = eval(response_picture)
                # 图片包id, picture_id['id']
                for picture_id in response_picture['data']['results']:
                    category_result_url = MC_HOST + '/storage/files/category_result?parent_id=%s&sequence=asc' % \
                                          picture_id['id']
                    response_category = read_url_get(category_result_url)
                    response_category = eval(response_category)

                    # 判断图片包一层目录下有没有文件夹或者其他任何图片，new：图片分类中有值的个数
                    new = {k:response_category['data']['results'][k] for k in response_category['data']['results'] if response_category['data']['results'][k]}
                    # print(len(new))
                    if len(new) == 0:
                        print("老版本为空图片包，跳过:图片包名称和期数是：" + product_overview['code'], picture_id['period_info']['period'])
                        pass
                    else:
                        merchant_number = urllib.parse.quote(product_overview['code'])
                        shop_cms_url = CMS_HOST + '/merchant/v2/products/overview?page=1&per_page=40&codes=%s&period_id=%s' % (
                            merchant_number, value)
                        response = read_url_get_cms(shop_cms_url)
                        response = eval(response)
                        for product in response["data"]["product_overview"]:
                            # 图片包未上传
                            if product['package_status'] == 'not_upload':
                                print(product_overview['id'], product_overview['code'])
    if response["data"]["total"] > 40:
        package_status(page + 1, per_page)


def resource_status(page=1, per_page=40):
    """查找出onemore数据迁移中，资源图状态，从已设置变为未设置
    """
    for key, value in PERIOD_MAPPING.items():
        shop_url = MC_HOST + '/merchant/products?page=%s&per_page=%s&code=&period_id=%s' % (page, per_page, key)
        response = read_url_get(shop_url)
        response = eval(response)
        for product_overview in response["data"]["products"]:
            # 资源图已设置
            if product_overview['media_status'] == 'confirmed':
                merchant_number = urllib.parse.quote(product_overview['code'])
                shop_cms_url = CMS_HOST + '/merchant/v2/products/overview?page=1&per_page=40&codes=%s&period_id=%s' % (
                    merchant_number, value)
                response = read_url_get_cms(shop_cms_url)
                response = eval(response)
                for product in response["data"]["product_overview"]:
                    # 资源图未设置
                    if product['resource_status'] == 'unsettled':
                        print(product_overview['id'], product_overview['code'])
    if response["data"]["total"] > 40:
        resource_status(page + 1, per_page)


def move(page=1, per_page=40):
    """查找出onemore数据迁移中，没有迁移到新版的数据
    """
    for key, value in PERIOD_MAPPING.items():
        shop_url = MC_HOST + '/merchant/products?page=%s&per_page=%s&code=&period_id=%s' % (page, per_page, key)
        response = read_url_get(shop_url)
        response = eval(response)
        for product_overview in response["data"]["products"]:
            merchant_number = urllib.parse.quote(product_overview['code'])
            shop_cms_url = CMS_HOST + '/merchant/v2/products/overview?page=1&per_page=40&codes=%s&period_id=%s' % (
                merchant_number, value)
            response = read_url_get_cms(shop_cms_url)
            response = eval(response)
            if not response["data"]["product_overview"]:
                print(product_overview['id'], product_overview['code'])
    if response["data"]["total"] > 40:
        move(page + 1, per_page)


def detail_status(page=1, per_page=40):
    """查找出onemore数据迁移中，详情页状态，从已生成变为未制作
    """
    for key, value in PERIOD_MAPPING.items():
        shop_url = MC_HOST + '/merchant/products?page=%s&per_page=%s&code=&period_id=%s' % (page, per_page, key)
        response = read_url_get(shop_url)
        response = eval(response)
        for product_overview in response["data"]["products"]:
            # 详情页已生成
            merchant_number = urllib.parse.quote(product_overview['code'])
            # https://api.ecpro.com/design-studio/document/documents?page=1&per_page=10&total=1&period_id=13302&query_string=B1BF727120
            design_url = MC_HOST + '/design-studio/document/documents?page=1&per_page=10&total=1&period_id=%s&query_string=%s' % (
            key, merchant_number)
            response = read_url_get(design_url)
            response = eval(response)
            for product in response["data"]["document"]:
                # 详情页已生成
                if product['create_status'] == 'generated':
                    merchant_number = urllib.parse.quote(product_overview['code'])
                    shop_cms_url = CMS_HOST + '/merchant/v2/products/overview?page=1&per_page=40&codes=%s&period_id=%s' % (
                        merchant_number, value)
                    response = read_url_get_cms(shop_cms_url)
                    response = eval(response)
                    for product in response["data"]["product_overview"]:
                        # 详情页未制作
                        if product['detail_status'] == 'unmade':
                            print(product_overview['id'], product_overview['code'])
    if response["data"]["total"] > 40:
        detail_status(page + 1, per_page)


def colors_status(page=1, per_page=40):
    """查找出onemore数据迁移中，颜色状态，丢失的
    """
    for key, value in PERIOD_MAPPING.items():
        shop_url = MC_HOST + '/merchant/products?page=%s&per_page=%s&code=&period_id=%s' % (page, per_page, key)
        response = read_url_get(shop_url)
        response = eval(response)
        for product_overview in response["data"]["products"]:
            # 存在颜色
            if not product_overview['colors']:
                pass
            else:
                merchant_number = urllib.parse.quote(product_overview['code'])
                shop_cms_url = CMS_HOST + '/merchant/v2/products/overview?page=1&per_page=40&codes=%s&period_id=%s' % (
                    merchant_number, value)
                response = read_url_get_cms(shop_cms_url)
                response = eval(response)
                for product in response["data"]["product_overview"]:
                    # 颜色为空
                    if not product['product']['colors']:
                        print(product_overview['id'], product_overview['code'])
    if response["data"]["total"] > 40:
        colors_status(page + 1, per_page)

def select_mysql(MC_account_id, CMS_account_id):
    # 打开数据库连接
    #db = MySQLdb.connect("rm-2zeb07rt531eym8of1o.mysql.rds.aliyuncs.com", "qa_v2", "lyp82nLF", "qa_v2_merchant", charset='utf8' )
    PERIOD_MAPPING = {}
    try:
        db = MySQLdb.connect(
            host='rm-2zeb07rt531eym8of1o.mysql.rds.aliyuncs.com',
            port=3306,
            user='dev_v2',
            passwd='lyp82nLF',
            db='dev_v2_design',
            charset='utf8',
            compress=1,
            connect_timeout=1
        )
    except BaseException:
        print("Could not connect to MySQL server.")
    # 使用cursor()方法获取操作游标
    cursor = db.cursor()
    # dev_v2_merchant 谨慎操作这张表，仅此一份
    sql = "SELECT * FROM `dev_v2_merchant`.`product_migrate` WHERE `mc_account_id` = %s AND `cms_account_id` = %s" % (MC_account_id, CMS_account_id)
    print(sql)
   # 执行SQL查询语句
    try:
        cursor.execute(sql)
        # 获取所有记录列表
        results = cursor.fetchall()
        print(len(results))
        for row in results:
            mc_period_id = row[4]
            cms_period_id = row[-1]
            # 打印结果
            # print("mc_period_id=%s,cms_period_id=%s" % (mc_period_id, cms_period_id))
            PERIOD_MAPPING[mc_period_id] = cms_period_id
    except:
        print('查询失败')
    print(PERIOD_MAPPING)
    print(len(PERIOD_MAPPING))
    db.close()
    return PERIOD_MAPPING

def cms_account(CMS_HOST, cms_number, cms_password):
    """查找账号下的token
    """
    # 获取access_token和account_id
    login_url = CMS_HOST + '/auth/login'
    login_body = {"mobile":str(cms_number),"password":str(cms_password),"login_way":"mobile"}
    print(login_body)
    response = requests.post(login_url,json=login_body)
    # print(response.json()['data']['access_token'],response.json()['data']['last_login_account'])
    print(response.json()['data']['last_login_account'])

    # 获取token
    account_url = CMS_HOST + '/user/account/login'
    account_body = {"account_id": response.json()['data']['last_login_account']}
    headers = {}
    headers['authorization'] = 'Bearer '+ response.json()['data']['access_token']
    res = requests.post(account_url, json=account_body, headers=headers)
    # print(res.json()['data']['access_token'])
    token = res.json()['data']['access_token']
    cms_account_id = response.json()['data']['last_login_account']
    print(token)
    return token, cms_account_id


if __name__ == '__main__':
    # 老版本账号和密码
    mc_number = 13925052092
    mc_password = 13925052092
    # 新版本账号和密码
    cms_number = 13925052092
    cms_password = 13925052092

    MC_token, MC_account_id= cms_account(MC_HOST, mc_number, mc_password)
    CMS_token, CMS_account_id = cms_account(CMS_HOST, cms_number, cms_password)
    headers = {}
    headers_cms = {}
    headers['authorization'] = 'Bearer ' + MC_token
    headers_cms['authorization'] = 'Bearer ' + CMS_token

    print(MC_account_id, CMS_account_id)
    # 从数据库里爬取本次迁移数据的期数
    PERIOD_MAPPING = select_mysql(MC_account_id, CMS_account_id)

    print("图片包未迁移")
    package_status()
    '''
    print('资源图未迁移')
    resource_status()

    print("商品颜色未迁移")
    colors_status()

    print("商品未迁移")
    move()

    print("详情页未迁移")
    detail_status()
    '''


